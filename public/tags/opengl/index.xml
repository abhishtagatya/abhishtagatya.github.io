<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenGL on Abhishta</title>
    <link>https://abhishtagatya.github.io/tags/opengl/</link>
    <description>Recent content in OpenGL on Abhishta</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 28 Jan 2025 00:00:00 +0100</lastBuildDate>
    <atom:link href="https://abhishtagatya.github.io/tags/opengl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sphere Ray Tracing in OpenGL</title>
      <link>https://abhishtagatya.github.io/posts/sphere-ray-tracing-in-opengl/</link>
      <pubDate>Tue, 28 Jan 2025 00:00:00 +0100</pubDate>
      <guid>https://abhishtagatya.github.io/posts/sphere-ray-tracing-in-opengl/</guid>
      <description>&lt;p&gt;&#xA;&lt;figure class=&#34;image-figure not-prose my-8&#34; &#xA;        data-lightbox-enabled=&#34;true&#34;&#xA;        data-gallery-type=&#34;auto&#34;&gt;&#xA;  &lt;div class=&#34;image-container&#34;&gt;&#xA;    &lt;img&#xA;    src=&#34;https://abhishtagatya.github.io/posts/sphere-ray-tracing-in-opengl/demo.gif&#34;&#xA;    alt=&#34;&#34;&#xA;    title=&#34;Preview&#34;&#xA;    &#xA;      &#xA;      &#xA;        &#xA;    width=&#34;1280&#34;&#xA;    height=&#34;716&#34;&#xA;        &#xA;      &#xA;    &#xA;    loading=&#34;lazy&#34;&#xA;    decoding=&#34;async&#34;&#xA;    data-gallery-src=&#34;https://abhishtagatya.github.io/posts/sphere-ray-tracing-in-opengl/demo.gif&#34;&#xA;    data-gallery-alt=&#34;&#34;&#xA;    data-gallery-title=&#34;Preview&#34; /&gt;&lt;/div&gt;&#xA;&#xA;  &lt;figcaption class=&#34;image-caption&#34;&gt;&#xA;      Preview&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;This project demonstrates &lt;strong&gt;ray tracing and particle simulation&lt;/strong&gt; using OpenGL. The scene combines static models, dynamic lights, and particle effects to showcase soft shadows, ambient occlusion, and real-time simulation.&lt;/p&gt;&#xA;&lt;h3 id=&#34;approach&#34;&gt;Approach&lt;/h3&gt;&#xA;&lt;p&gt;The scene is built using a hybrid pipeline:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Ray Tracing&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Static snowman model and dynamic light spheres are ray-traced.&lt;/li&gt;&#xA;&lt;li&gt;Soft shadows are computed using adjustable &lt;strong&gt;sample count&lt;/strong&gt; and &lt;strong&gt;light radius&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Spherical Ambient Occlusion&lt;/strong&gt; enhances depth perception and realism.&lt;/li&gt;&#xA;&lt;li&gt;Early exit optimization is applied to rays with low attenuation for better performance.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Particle Simulation&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mirror using Offscreen Rendering and Stencil Mask in OpenGL</title>
      <link>https://abhishtagatya.github.io/posts/mirror-using-offscreen-rendering-and-stencil-mask-in-opengl/</link>
      <pubDate>Thu, 28 Nov 2024 00:00:00 +0100</pubDate>
      <guid>https://abhishtagatya.github.io/posts/mirror-using-offscreen-rendering-and-stencil-mask-in-opengl/</guid>
      <description>&lt;p&gt;&#xA;&lt;figure class=&#34;image-figure not-prose my-8&#34; &#xA;        data-lightbox-enabled=&#34;true&#34;&#xA;        data-gallery-type=&#34;auto&#34;&gt;&#xA;  &lt;div class=&#34;image-container&#34;&gt;&#xA;    &lt;img&#xA;    src=&#34;https://abhishtagatya.github.io/posts/mirror-using-offscreen-rendering-and-stencil-mask-in-opengl/demo.gif&#34;&#xA;    alt=&#34;&#34;&#xA;    title=&#34;Preview&#34;&#xA;    &#xA;      &#xA;      &#xA;        &#xA;    width=&#34;1280&#34;&#xA;    height=&#34;708&#34;&#xA;        &#xA;      &#xA;    &#xA;    loading=&#34;lazy&#34;&#xA;    decoding=&#34;async&#34;&#xA;    data-gallery-src=&#34;https://abhishtagatya.github.io/posts/mirror-using-offscreen-rendering-and-stencil-mask-in-opengl/demo.gif&#34;&#xA;    data-gallery-alt=&#34;&#34;&#xA;    data-gallery-title=&#34;Preview&#34; /&gt;&lt;/div&gt;&#xA;&#xA;  &lt;figcaption class=&#34;image-caption&#34;&gt;&#xA;      Preview&#xA;    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;This project demonstrates how to create a &lt;strong&gt;mirror effect in OpenGL&lt;/strong&gt; using stencil buffers, framebuffers, and object masking. The result is a composed scene where the mirror view is rendered realistically, with optional blur outside masked objects.&lt;/p&gt;&#xA;&lt;h3 id=&#34;approach&#34;&gt;Approach&lt;/h3&gt;&#xA;&lt;p&gt;The mirror was built using a multi-pass rendering pipeline:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mirror Camera Transformation&lt;/strong&gt;&lt;br&gt;&#xA;The mirror camera is derived from the main camera by reflecting its view matrix across the mirror plane.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
